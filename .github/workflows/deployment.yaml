name: Deployment

on:
    push:
        branches: [main]
    workflow_dispatch:

# Automatically cancel in-progress actions on the same branch
concurrency:
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
    cancel-in-progress: true

env:
    REGISTRY: docker.io
    IMAGE_OWNER: trueberryless
    IMAGE_NAME: starlight-cooler-credit
    NODE_VERSION: 20

jobs:
    changes:
        name: Filter
        runs-on: ubuntu-latest
        outputs:
            docs: ${{ steps.filter.outputs.docs }}
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - uses: dorny/paths-filter@v3
              id: filter
              with:
                  filters: |
                      docs:
                        - 'docs/**'

    changesets:
        name: Changesets
        runs-on: ubuntu-latest
        outputs:
            docs: ${{ steps.changesets.outputs.hasChangesets }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup PNPM
              uses: pnpm/action-setup@v3

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "pnpm"

            - name: Install Dependencies
              run: pnpm i

            - name: Create Release Pull Request
              id: changesets
              uses: changesets/action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.PUBLIC_GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    deployment:
        needs: [changes, changesets]
        # Only run if there is no changeset (i.e. a release), there are changes to the docs and the commit message contains '[ci] release' or 'deploy' (workflow_dispatch supported)
        if: (${{ needs.changes.outputs.docs == 'true' }} && ${{ needs.changesets.outputs.hasChangesets== 'false' }} && (contains(github.event.head_commit.message, 'deploy') || contains(github.event.head_commit.message, '[ci] release'))) || github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Read version from package.json
              id: get_version
              run: |
                  VERSION=$(jq -r '.version' package.json)
                  echo "VERSION=$VERSION" >> $GITHUB_ENV

            - name: Create tag
              run: echo "IMAGE_TAG=${{ env.VERSION }}" >> $GITHUB_ENV

            - name: Setup PNPM
              uses: pnpm/action-setup@v3
              with:
                  package_json_file: ./docs/package.json

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: pnpm
                  cache-dependency-path: ./pnpm-lock.yaml

            - name: Install dependencies
              run: pnpm install
              shell: bash
              working-directory: ./docs

            - name: Build Website
              run: pnpm run build
              shell: bash
              working-directory: ./docs

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: |
                      ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                      ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:latest
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Update deployment.yaml file
              run: |
                  yq eval '.spec.template.spec.containers[0].image = "${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"' -i manifest/deployment.yaml

            - uses: stefanzweifel/git-auto-commit-action@v4
              with:
                  commit_message: update deployment.json container image (automated)

    release:
        name: Release
        # needs: [deployment]
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Extract latest changelog entry
              id: changelog
              run: |
                  first_h2_heading=$(grep -m 1 '^## ' docs/CHANGELOG.md)
                  second_h2_heading=$(grep -m 2 '^## ' docs/CHANGELOG.md)
                  LATEST_CHANGELOG=$(sed -n '/^${first_h2_heading}$/,/^${second_h2_heading}$/p' docs/CHANGELOG.md | sed '$d')
                  echo "LATEST_CHANGELOG=$LATEST_CHANGELOG"
                  echo "LATEST_CHANGELOG=$LATEST_CHANGELOG" >> $GITHUB_ENV

            - uses: ncipollo/release-action@v1
              with:
                  tag: ${{ env.IMAGE_NAME }}-docs@${{ env.IMAGE_TAG }}
                  makeLatest: true
                  body: ${{ steps.changelog.outputs.latest_changelog }}
